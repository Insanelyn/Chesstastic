{"version":3,"sources":["board.js"],"names":["NeighborType","Above","offset","AboveLeft","AboveRight","Below","BelowLeft","BelowRight","KnightAboveLeft","KnightAboveRight","KnightBelowLeft","KnightBelowRight","KnightLeftAbove","KnightLeftBelow","KnightRightAbove","KnightRightBelow","Left","Right","Board","squares","sq","n","file","rank","fIndex","indexOf","i","length","f","r","parseInt","charAt","side","list","piece","push","src","dest","getSquare","simulate","move","algebraic","capturedPiece","castle","enPassant","postSquare","prevSquare","p","undo","b","m","type","King","moveCount","Pawn","lastMovedPiece","emit","Math","floor","create","createRook","White","Black","createKnight","createBishop","createQueen","createKing","createPawn"],"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","file":"board.js","sourcesContent":["/**\n\tThe Board is the representation of the current position of the pieces on\n\tthe squares it contains.\n*/\n\nimport { EventEmitter } from 'events';\nimport { Piece, PieceType, SideType } from './piece';\nimport { Square } from './square';\n\n// types\nexport var NeighborType = {\n\tAbove : { offset : 8 },\n\tAboveLeft : { offset : 7 },\n\tAboveRight : { offset : 9 },\n\tBelow : { offset : -8 },\n\tBelowLeft : { offset : -9 },\n\tBelowRight : { offset : -7 },\n\tKnightAboveLeft : { offset : 15 },\n\tKnightAboveRight : { offset : 17 },\n\tKnightBelowLeft : { offset : -17 },\n\tKnightBelowRight : { offset : -15 },\n\tKnightLeftAbove : { offset : 6 },\n\tKnightLeftBelow : { offset : -10 },\n\tKnightRightAbove : { offset : 10 },\n\tKnightRightBelow : { offset : -6 },\n\tLeft : { offset : -1 },\n\tRight : { offset : 1 }\n};\n\n// ctor\nexport class Board extends EventEmitter {\n\tconstructor (squares) {\n\t\tsuper();\n\n\t\tthis.squares = squares;\n\t}\n\n\tstatic create () {\n\t\tlet\n\t\t\tb = new Board([]),\n\t\t\ti = 0,\n\t\t\tf = 0,\n\t\t\tr = 0,\n\t\t\tsq = null;\n\n\t\t/* eslint no-magic-numbers:0 */\n\t\tfor (i = 0; i < 64; i++) {\n\t\t\tf = Math.floor(i % 8);\n\t\t\tr = Math.floor(i / 8) + 1;\n\t\t\tsq = Square.create('abcdefgh'[f], r);\n\n\t\t\tb.squares.push(sq);\n\n\t\t\tif (r === 1 || r === 8) { // Named pieces\n\t\t\t\tif (f === 0 || f === 7) { // Rookage\n\t\t\t\t\tsq.piece = Piece.createRook(\n\t\t\t\t\t\tr === 1 ? SideType.White : SideType.Black\n\t\t\t\t\t);\n\t\t\t\t} else if (f === 1 || f === 6) { // Knights\n\t\t\t\t\tsq.piece = Piece.createKnight(\n\t\t\t\t\t\tr === 1 ? SideType.White : SideType.Black\n\t\t\t\t\t);\n\t\t\t\t} else if (f === 2 || f === 5) { // Bish's\n\t\t\t\t\tsq.piece = Piece.createBishop(\n\t\t\t\t\t\tr === 1 ? SideType.White : SideType.Black\n\t\t\t\t\t);\n\t\t\t\t} else if (f === 3) {\n\t\t\t\t\tsq.piece = Piece.createQueen(\n\t\t\t\t\t\tr === 1 ? SideType.White : SideType.Black\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tsq.piece = Piece.createKing(\n\t\t\t\t\t\tr === 1 ? SideType.White : SideType.Black\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (r === 2 || r === 7) { // Pawns\n\t\t\t\tsq.piece = Piece.createPawn(\n\t\t\t\t\tr === 2 ? SideType.White : SideType.Black\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tgetNeighborSquare (sq, n) {\n\t\tif (sq && n) {\n\t\t\t// validate boundaries of board\n\t\t\tif (sq.file === 'a' && (n === NeighborType.AboveLeft ||\n\t\t\t\t\tn === NeighborType.BelowLeft ||\n\t\t\t\t\tn === NeighborType.Left)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (sq.file === 'h' && (n === NeighborType.AboveRight ||\n\t\t\t\t\tn === NeighborType.BelowRight ||\n\t\t\t\t\tn === NeighborType.Right)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (sq.rank === 1 && (n === NeighborType.Below ||\n\t\t\t\t\tn === NeighborType.BelowLeft ||\n\t\t\t\t\tn === NeighborType.BelowRight)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (sq.rank === 8 && (n === NeighborType.Above ||\n\t\t\t\t\tn === NeighborType.AboveLeft ||\n\t\t\t\t\tn === NeighborType.AboveRight)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// validate file\n\t\t\tlet\n\t\t\t\tfIndex = 'abcdefgh'.indexOf(sq.file),\n\t\t\t\ti = 0;\n\n\t\t\tif (fIndex !== -1 && sq.rank > 0 && sq.rank < 9) {\n\t\t\t\t// find the index\n\t\t\t\ti = 8 * (sq.rank - 1) + fIndex + n.offset;\n\t\t\t\tif (this.squares && this.squares.length > i && i > -1) {\n\t\t\t\t\treturn this.squares[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetSquare (f, r) {\n\t\t// check for shorthand\n\t\tif (typeof f === 'string' && f.length === 2 && !r) {\n\t\t\tr = parseInt(f.charAt(1), 10);\n\t\t\tf = f.charAt(0);\n\t\t}\n\n\t\t// validate file\n\t\tlet\n\t\t\tfIndex = 'abcdefgh'.indexOf(f),\n\t\t\ti = 0;\n\n\t\tif (fIndex !== -1 && r > 0 && r < 9) {\n\t\t\t// Find the index\n\t\t\ti = 8 * (r - 1) + fIndex;\n\t\t\tif (this.squares && this.squares.length > i) {\n\t\t\t\treturn this.squares[i];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetSquares (side) {\n\t\tlet\n\t\t\tlist = [],\n\t\t\ti = 0;\n\n\t\tfor (i = 0; i < this.squares.length; i++) {\n\t\t\tif (this.squares[i].piece &&\n\t\t\t\t\tthis.squares[i].piece.side === side) {\n\t\t\t\tlist.push(this.squares[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn list;\n\t}\n\n\tmove (src, dest, n) {\n\t\tif (typeof src === 'string' &&\n\t\t\t\tsrc.length === 2) {\n\t\t\tsrc = this.getSquare(src);\n\t\t}\n\n\t\tif (typeof dest === 'string' &&\n\t\t\t\tdest.length === 2) {\n\t\t\tdest = this.getSquare(dest);\n\t\t}\n\n\t\tlet simulate = false;\n\n\t\tif (typeof n === 'boolean') {\n\t\t\tsimulate = n;\n\t\t\tn = null;\n\t\t}\n\n\t\tif (src && src.file && src.rank &&\n\t\t\t\tdest && dest.file && dest.rank) {\n\t\t\tlet\n\t\t\t\tmove = {\n\t\t\t\t\talgebraic : n,\n\t\t\t\t\tcapturedPiece : dest.piece,\n\t\t\t\t\tcastle : false,\n\t\t\t\t\tenPassant : false,\n\t\t\t\t\tpostSquare : dest,\n\t\t\t\t\tprevSquare : src\n\t\t\t\t},\n\t\t\t\tp = src.piece,\n\t\t\t\tsq = null,\n\t\t\t\tundo = function (b, m) {\n\t\t\t\t\treturn function () {\n\t\t\t\t\t\tm.prevSquare.piece = m.postSquare.piece;\n\t\t\t\t\t\tm.postSquare.piece = m.capturedPiece;\n\n\t\t\t\t\t\tif (!m.enPassant) {\n\t\t\t\t\t\t\tm.postSquare.piece = m.capturedPiece;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tb.getSquare(m.postSquare.file,\n\t\t\t\t\t\t\t\tm.prevSquare.rank).piece = m.capturedPiece;\n\n\t\t\t\t\t\t\t// there is no piece on the post square in the event of\n\t\t\t\t\t\t\t// an en-passant, clear anything that me be present as\n\t\t\t\t\t\t\t// a result of the move (fix for issue #8)\n\t\t\t\t\t\t\tm.postSquare.piece = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (m.castle) {\n\t\t\t\t\t\t\tsq = b.getSquare(\n\t\t\t\t\t\t\t\tmove.postSquare.file === 'g' ? 'f' : 'd',\n\t\t\t\t\t\t\t\tmove.postSquare.rank\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tb.getSquare(\n\t\t\t\t\t\t\t\tmove.postSquare.file === 'g' ? 'h' : 'a',\n\t\t\t\t\t\t\t\tmove.postSquare.rank\n\t\t\t\t\t\t\t).piece = sq.piece;\n\t\t\t\t\t\t\tsq.piece = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\tdest.piece = p;\n\t\t\tmove.castle = p.type === PieceType.King &&\n\t\t\t\tp.moveCount === 0 &&\n\t\t\t\t(move.postSquare.file === 'g' || move.postSquare.file === 'c');\n\t\t\tmove.enPassant = p.type === PieceType.Pawn &&\n\t\t\t\tmove.capturedPiece === null &&\n\t\t\t\tmove.postSquare.file !== move.prevSquare.file;\n\t\t\tmove.prevSquare.piece = null;\n\n\t\t\t// check for en-passant\n\t\t\tif (move.enPassant) {\n\t\t\t\tsq = this.getSquare(move.postSquare.file, move.prevSquare.rank);\n\t\t\t\tmove.capturedPiece = sq.piece;\n\t\t\t\tsq.piece = null;\n\t\t\t}\n\n\t\t\t// check for castle\n\t\t\tif (move.castle) {\n\t\t\t\tsq = this.getSquare(\n\t\t\t\t\tmove.postSquare.file === 'g' ? 'h' : 'a',\n\t\t\t\t\tmove.postSquare.rank\n\t\t\t\t);\n\n\t\t\t\tif (sq.piece === null) {\n\t\t\t\t\tmove.castle = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.getSquare(\n\t\t\t\t\t\tmove.postSquare.file === 'g' ? 'f' : 'd',\n\t\t\t\t\t\tmove.postSquare.rank\n\t\t\t\t\t).piece = sq.piece;\n\t\t\t\t\tsq.piece = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!simulate) {\n\t\t\t\tp.moveCount++;\n\t\t\t\tthis.lastMovedPiece = p;\n\t\t\t\tthis.emit('move', move);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tmove,\n\t\t\t\tundo : undo(this, move, simulate)\n\t\t\t};\n\t\t}\n\t}\n\n\tpromote (sq, p) {\n\t\t// update move count and last piece\n\t\tp.moveCount = sq.piece.moveCount;\n\t\tthis.lastMovedPiece = p;\n\n\t\t// set to square\n\t\tsq.piece = p;\n\n\t\tthis.emit('promote', sq);\n\n\t\treturn sq;\n\t}\n}\n\n// exports\nexport default { Board, NeighborType };\n"]}