{"version":3,"sources":["simpleGameClient.js"],"names":["isMoveValid","src","dest","validMoves","i","isFound","expr","sq","file","rank","squares","length","updateGameClient","gameClient","validation","start","err","result","Error","isCheck","isCheckmate","isRepetition","isStalemate","SimpleGameClient","game","create","on","attackers","emit","forceUpdate","board","promo","move","side","getCurrentSide","piece","createBishop","createKnight","createQueen","createRook","promote","postSquare"],"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","file":"simpleGameClient.js","sourcesContent":["import { EventEmitter } from 'events';\nimport { Game } from './game';\nimport { GameValidation } from './gameValidation';\nimport { Piece } from './piece';\n\n// private methods\nfunction isMoveValid (src, dest, validMoves) {\n\tlet\n\t\ti = 0,\n\t\tisFound = function (expr, sq) {\n\t\t\treturn ((typeof expr === 'string' && sq.file + sq.rank === expr) ||\n\t\t\t\t(expr.rank && expr.file &&\n\t\t\t\t\tsq.file === expr.file && sq.rank === expr.rank));\n\t\t},\n\t\tsquares = [];\n\n\tfor (i = 0; i < validMoves.length; i++) {\n\t\tif (isFound(src, validMoves[i].src)) {\n\t\t\tsquares = validMoves[i].squares;\n\t\t}\n\t}\n\n\tif (squares && squares.length > 0) {\n\t\tfor (i = 0; i < squares.length; i++) {\n\t\t\tif (isFound(dest, squares[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction updateGameClient (gameClient) {\n\treturn gameClient.validation.start(function (err, result) {\n\t\tif (err) {\n\t\t\tthrow new Error(err);\n\t\t}\n\n\t\tgameClient.isCheck = result.isCheck;\n\t\tgameClient.isCheckmate = result.isCheckmate;\n\t\tgameClient.isRepetition = result.isRepetition;\n\t\tgameClient.isStalemate = result.isStalemate;\n\t\tgameClient.validMoves = result.validMoves;\n\t});\n}\n\n// ctor\nexport class SimpleGameClient extends EventEmitter {\n\tconstructor (game) {\n\t\tsuper();\n\n\t\tthis.isCheck = false;\n\t\tthis.isCheckmate = false;\n\t\tthis.isRepetition = false;\n\t\tthis.isStalemate = false;\n\t\tthis.game = game;\n\t\tthis.validMoves = [];\n\t\tthis.validation = GameValidation.create(this.game);\n\n\t\t// bubble the game check event\n\t\tthis.game.on('check', (attackers) => (this.emit('check', attackers)));\n\t}\n\n\tstatic create () {\n\t\tlet\n\t\t\tgame = Game.create(),\n\t\t\tgameClient = new SimpleGameClient(game);\n\n\t\tupdateGameClient(gameClient);\n\n\t\treturn gameClient;\n\t}\n\n\tgetStatus (forceUpdate) {\n\t\tif (forceUpdate) {\n\t\t\tupdateGameClient(this);\n\t\t}\n\n\t\treturn {\n\t\t\tboard : this.game.board,\n\t\t\tisCheck : this.isCheck,\n\t\t\tisCheckmate : this.isCheckmate,\n\t\t\tisRepetition : this.isRepetition,\n\t\t\tisStalemate : this.isStalemate,\n\t\t\tvalidMoves : this.validMoves\n\t\t};\n\t}\n\n\tmove (src, dest, promo) {\n\t\tlet\n\t\t\tmove = null,\n\t\t\tside = this.game.getCurrentSide();\n\n\tif (src && dest && isMoveValid(src, dest, this.validMoves)) {\n\t\tmove = this.game.board.move(src, dest);\n\n\t\tif (move) {\n\t\t\t// apply pawn promotion if applicable\n\t\t\tif (promo) {\n\t\t\t\tlet piece;\n\n\t\t\t\tswitch (promo) {\n\t\t\t\t\tcase 'B':\n\t\t\t\t\t\tpiece = Piece.createBishop(side);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'N':\n\t\t\t\t\t\tpiece = Piece.createKnight(side);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Q':\n\t\t\t\t\t\tpiece = Piece.createQueen(side);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tpiece = Piece.createRook(side);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tpiece = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (piece) {\n\t\t\t\t\tthis.game.board.promote(move.move.postSquare, piece);\n\t\t\t\t\t/*\n\t\t\t\t\tp.moveCount = move.move.postSquare.piece.moveCount;\n\t\t\t\t\tmove.move.postSquare.piece = p;\n\t\t\t\t\t//*/\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdateGameClient(this);\n\t\t\treturn move;\n\t\t}\n\t}\n\n\tthrow new Error(`Move is invalid (${ src } to ${ dest })`);\n\t}\n}\n\nexport default { SimpleGameClient };\n"]}