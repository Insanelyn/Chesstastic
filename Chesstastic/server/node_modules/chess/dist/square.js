"use strict";

var cov_1t1eqlu3h6 = function () {
	var path = "/Volumes/Data/Projects/brozeph/node-chess/src/square.js",
	    hash = "da43a639d3fc3267562cdc259de6cd1fe80eeae9",
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = "__coverage__",
	    coverageData = {
		path: "/Volumes/Data/Projects/brozeph/node-chess/src/square.js",
		statementMap: {
			"0": {
				start: {
					line: 10,
					column: 2
				},
				end: {
					line: 10,
					column: 19
				}
			},
			"1": {
				start: {
					line: 11,
					column: 2
				},
				end: {
					line: 11,
					column: 20
				}
			},
			"2": {
				start: {
					line: 12,
					column: 2
				},
				end: {
					line: 12,
					column: 19
				}
			},
			"3": {
				start: {
					line: 16,
					column: 2
				},
				end: {
					line: 16,
					column: 32
				}
			}
		},
		fnMap: {
			"0": {
				name: "(anonymous_0)",
				decl: {
					start: {
						line: 9,
						column: 1
					},
					end: {
						line: 9,
						column: 2
					}
				},
				loc: {
					start: {
						line: 9,
						column: 26
					},
					end: {
						line: 13,
						column: 2
					}
				},
				line: 9
			},
			"1": {
				name: "(anonymous_1)",
				decl: {
					start: {
						line: 15,
						column: 1
					},
					end: {
						line: 15,
						column: 2
					}
				},
				loc: {
					start: {
						line: 15,
						column: 28
					},
					end: {
						line: 17,
						column: 2
					}
				},
				line: 15
			}
		},
		branchMap: {},
		s: {
			"0": 0,
			"1": 0,
			"2": 0,
			"3": 0
		},
		f: {
			"0": 0,
			"1": 0
		},
		b: {},
		_coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
	The simple definition of a rank & file within a board.

	Additionally, if a Piece occupies a square on a board, the
	square contains the reference to the piece.
*/

var Square = exports.Square = function () {
	function Square(file, rank) {
		_classCallCheck(this, Square);

		cov_1t1eqlu3h6.f[0]++;
		cov_1t1eqlu3h6.s[0]++;

		this.file = file;
		cov_1t1eqlu3h6.s[1]++;
		this.piece = null;
		cov_1t1eqlu3h6.s[2]++;
		this.rank = rank;
	}

	_createClass(Square, null, [{
		key: "create",
		value: function create(file, rank) {
			cov_1t1eqlu3h6.f[1]++;
			cov_1t1eqlu3h6.s[3]++;

			return new Square(file, rank);
		}
	}]);

	return Square;
}();

exports.default = { Square: Square };
//# sourceMappingURL=square.js.map
