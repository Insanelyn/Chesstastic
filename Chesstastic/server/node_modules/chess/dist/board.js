'use strict';

var cov_1m8d64adko = function () {
	var path = '/Volumes/Data/Projects/brozeph/node-chess/src/board.js',
	    hash = '64b90c6a30e5095f33730582cd0db84513b8e4ff',
	    Function = function () {}.constructor,
	    global = new Function('return this')(),
	    gcv = '__coverage__',
	    coverageData = {
		path: '/Volumes/Data/Projects/brozeph/node-chess/src/board.js',
		statementMap: {
			'0': {
				start: {
					line: 11,
					column: 26
				},
				end: {
					line: 28,
					column: 1
				}
			},
			'1': {
				start: {
					line: 33,
					column: 2
				},
				end: {
					line: 33,
					column: 10
				}
			},
			'2': {
				start: {
					line: 35,
					column: 2
				},
				end: {
					line: 35,
					column: 25
				}
			},
			'3': {
				start: {
					line: 40,
					column: 7
				},
				end: {
					line: 40,
					column: 20
				}
			},
			'4': {
				start: {
					line: 41,
					column: 7
				},
				end: {
					line: 41,
					column: 8
				}
			},
			'5': {
				start: {
					line: 42,
					column: 7
				},
				end: {
					line: 42,
					column: 8
				}
			},
			'6': {
				start: {
					line: 43,
					column: 7
				},
				end: {
					line: 43,
					column: 8
				}
			},
			'7': {
				start: {
					line: 44,
					column: 8
				},
				end: {
					line: 44,
					column: 12
				}
			},
			'8': {
				start: {
					line: 47,
					column: 2
				},
				end: {
					line: 81,
					column: 3
				}
			},
			'9': {
				start: {
					line: 48,
					column: 3
				},
				end: {
					line: 48,
					column: 25
				}
			},
			'10': {
				start: {
					line: 49,
					column: 3
				},
				end: {
					line: 49,
					column: 29
				}
			},
			'11': {
				start: {
					line: 50,
					column: 3
				},
				end: {
					line: 50,
					column: 40
				}
			},
			'12': {
				start: {
					line: 52,
					column: 3
				},
				end: {
					line: 52,
					column: 22
				}
			},
			'13': {
				start: {
					line: 54,
					column: 3
				},
				end: {
					line: 80,
					column: 4
				}
			},
			'14': {
				start: {
					line: 55,
					column: 4
				},
				end: {
					line: 75,
					column: 5
				}
			},
			'15': {
				start: {
					line: 56,
					column: 5
				},
				end: {
					line: 58,
					column: 7
				}
			},
			'16': {
				start: {
					line: 59,
					column: 11
				},
				end: {
					line: 75,
					column: 5
				}
			},
			'17': {
				start: {
					line: 60,
					column: 5
				},
				end: {
					line: 62,
					column: 7
				}
			},
			'18': {
				start: {
					line: 63,
					column: 11
				},
				end: {
					line: 75,
					column: 5
				}
			},
			'19': {
				start: {
					line: 64,
					column: 5
				},
				end: {
					line: 66,
					column: 7
				}
			},
			'20': {
				start: {
					line: 67,
					column: 11
				},
				end: {
					line: 75,
					column: 5
				}
			},
			'21': {
				start: {
					line: 68,
					column: 5
				},
				end: {
					line: 70,
					column: 7
				}
			},
			'22': {
				start: {
					line: 72,
					column: 5
				},
				end: {
					line: 74,
					column: 7
				}
			},
			'23': {
				start: {
					line: 76,
					column: 10
				},
				end: {
					line: 80,
					column: 4
				}
			},
			'24': {
				start: {
					line: 77,
					column: 4
				},
				end: {
					line: 79,
					column: 6
				}
			},
			'25': {
				start: {
					line: 83,
					column: 2
				},
				end: {
					line: 83,
					column: 11
				}
			},
			'26': {
				start: {
					line: 87,
					column: 2
				},
				end: {
					line: 125,
					column: 3
				}
			},
			'27': {
				start: {
					line: 89,
					column: 3
				},
				end: {
					line: 93,
					column: 4
				}
			},
			'28': {
				start: {
					line: 92,
					column: 4
				},
				end: {
					line: 92,
					column: 16
				}
			},
			'29': {
				start: {
					line: 95,
					column: 3
				},
				end: {
					line: 99,
					column: 4
				}
			},
			'30': {
				start: {
					line: 98,
					column: 4
				},
				end: {
					line: 98,
					column: 16
				}
			},
			'31': {
				start: {
					line: 101,
					column: 3
				},
				end: {
					line: 105,
					column: 4
				}
			},
			'32': {
				start: {
					line: 104,
					column: 4
				},
				end: {
					line: 104,
					column: 16
				}
			},
			'33': {
				start: {
					line: 107,
					column: 3
				},
				end: {
					line: 111,
					column: 4
				}
			},
			'34': {
				start: {
					line: 110,
					column: 4
				},
				end: {
					line: 110,
					column: 16
				}
			},
			'35': {
				start: {
					line: 115,
					column: 13
				},
				end: {
					line: 115,
					column: 40
				}
			},
			'36': {
				start: {
					line: 116,
					column: 8
				},
				end: {
					line: 116,
					column: 9
				}
			},
			'37': {
				start: {
					line: 118,
					column: 3
				},
				end: {
					line: 124,
					column: 4
				}
			},
			'38': {
				start: {
					line: 120,
					column: 4
				},
				end: {
					line: 120,
					column: 46
				}
			},
			'39': {
				start: {
					line: 121,
					column: 4
				},
				end: {
					line: 123,
					column: 5
				}
			},
			'40': {
				start: {
					line: 122,
					column: 5
				},
				end: {
					line: 122,
					column: 28
				}
			},
			'41': {
				start: {
					line: 127,
					column: 2
				},
				end: {
					line: 127,
					column: 14
				}
			},
			'42': {
				start: {
					line: 132,
					column: 2
				},
				end: {
					line: 135,
					column: 3
				}
			},
			'43': {
				start: {
					line: 133,
					column: 3
				},
				end: {
					line: 133,
					column: 33
				}
			},
			'44': {
				start: {
					line: 134,
					column: 3
				},
				end: {
					line: 134,
					column: 19
				}
			},
			'45': {
				start: {
					line: 139,
					column: 12
				},
				end: {
					line: 139,
					column: 33
				}
			},
			'46': {
				start: {
					line: 140,
					column: 7
				},
				end: {
					line: 140,
					column: 8
				}
			},
			'47': {
				start: {
					line: 142,
					column: 2
				},
				end: {
					line: 148,
					column: 3
				}
			},
			'48': {
				start: {
					line: 144,
					column: 3
				},
				end: {
					line: 144,
					column: 28
				}
			},
			'49': {
				start: {
					line: 145,
					column: 3
				},
				end: {
					line: 147,
					column: 4
				}
			},
			'50': {
				start: {
					line: 146,
					column: 4
				},
				end: {
					line: 146,
					column: 27
				}
			},
			'51': {
				start: {
					line: 150,
					column: 2
				},
				end: {
					line: 150,
					column: 14
				}
			},
			'52': {
				start: {
					line: 155,
					column: 10
				},
				end: {
					line: 155,
					column: 12
				}
			},
			'53': {
				start: {
					line: 156,
					column: 7
				},
				end: {
					line: 156,
					column: 8
				}
			},
			'54': {
				start: {
					line: 158,
					column: 2
				},
				end: {
					line: 163,
					column: 3
				}
			},
			'55': {
				start: {
					line: 159,
					column: 3
				},
				end: {
					line: 162,
					column: 4
				}
			},
			'56': {
				start: {
					line: 161,
					column: 4
				},
				end: {
					line: 161,
					column: 31
				}
			},
			'57': {
				start: {
					line: 165,
					column: 2
				},
				end: {
					line: 165,
					column: 14
				}
			},
			'58': {
				start: {
					line: 169,
					column: 2
				},
				end: {
					line: 172,
					column: 3
				}
			},
			'59': {
				start: {
					line: 171,
					column: 3
				},
				end: {
					line: 171,
					column: 29
				}
			},
			'60': {
				start: {
					line: 174,
					column: 2
				},
				end: {
					line: 177,
					column: 3
				}
			},
			'61': {
				start: {
					line: 176,
					column: 3
				},
				end: {
					line: 176,
					column: 31
				}
			},
			'62': {
				start: {
					line: 179,
					column: 17
				},
				end: {
					line: 179,
					column: 22
				}
			},
			'63': {
				start: {
					line: 181,
					column: 2
				},
				end: {
					line: 184,
					column: 3
				}
			},
			'64': {
				start: {
					line: 182,
					column: 3
				},
				end: {
					line: 182,
					column: 16
				}
			},
			'65': {
				start: {
					line: 183,
					column: 3
				},
				end: {
					line: 183,
					column: 12
				}
			},
			'66': {
				start: {
					line: 186,
					column: 2
				},
				end: {
					line: 274,
					column: 3
				}
			},
			'67': {
				start: {
					line: 189,
					column: 11
				},
				end: {
					line: 196,
					column: 5
				}
			},
			'68': {
				start: {
					line: 197,
					column: 8
				},
				end: {
					line: 197,
					column: 17
				}
			},
			'69': {
				start: {
					line: 198,
					column: 9
				},
				end: {
					line: 198,
					column: 13
				}
			},
			'70': {
				start: {
					line: 199,
					column: 11
				},
				end: {
					line: 228,
					column: 5
				}
			},
			'71': {
				start: {
					line: 200,
					column: 5
				},
				end: {
					line: 227,
					column: 7
				}
			},
			'72': {
				start: {
					line: 201,
					column: 6
				},
				end: {
					line: 201,
					column: 46
				}
			},
			'73': {
				start: {
					line: 202,
					column: 6
				},
				end: {
					line: 202,
					column: 43
				}
			},
			'74': {
				start: {
					line: 204,
					column: 6
				},
				end: {
					line: 214,
					column: 7
				}
			},
			'75': {
				start: {
					line: 205,
					column: 7
				},
				end: {
					line: 205,
					column: 44
				}
			},
			'76': {
				start: {
					line: 207,
					column: 7
				},
				end: {
					line: 208,
					column: 51
				}
			},
			'77': {
				start: {
					line: 213,
					column: 7
				},
				end: {
					line: 213,
					column: 33
				}
			},
			'78': {
				start: {
					line: 216,
					column: 6
				},
				end: {
					line: 226,
					column: 7
				}
			},
			'79': {
				start: {
					line: 217,
					column: 7
				},
				end: {
					line: 220,
					column: 9
				}
			},
			'80': {
				start: {
					line: 221,
					column: 7
				},
				end: {
					line: 224,
					column: 26
				}
			},
			'81': {
				start: {
					line: 225,
					column: 7
				},
				end: {
					line: 225,
					column: 23
				}
			},
			'82': {
				start: {
					line: 230,
					column: 3
				},
				end: {
					line: 230,
					column: 18
				}
			},
			'83': {
				start: {
					line: 231,
					column: 3
				},
				end: {
					line: 233,
					column: 67
				}
			},
			'84': {
				start: {
					line: 234,
					column: 3
				},
				end: {
					line: 236,
					column: 50
				}
			},
			'85': {
				start: {
					line: 237,
					column: 3
				},
				end: {
					line: 237,
					column: 32
				}
			},
			'86': {
				start: {
					line: 240,
					column: 3
				},
				end: {
					line: 244,
					column: 4
				}
			},
			'87': {
				start: {
					line: 241,
					column: 4
				},
				end: {
					line: 241,
					column: 68
				}
			},
			'88': {
				start: {
					line: 242,
					column: 4
				},
				end: {
					line: 242,
					column: 34
				}
			},
			'89': {
				start: {
					line: 243,
					column: 4
				},
				end: {
					line: 243,
					column: 20
				}
			},
			'90': {
				start: {
					line: 247,
					column: 3
				},
				end: {
					line: 262,
					column: 4
				}
			},
			'91': {
				start: {
					line: 248,
					column: 4
				},
				end: {
					line: 251,
					column: 6
				}
			},
			'92': {
				start: {
					line: 253,
					column: 4
				},
				end: {
					line: 261,
					column: 5
				}
			},
			'93': {
				start: {
					line: 254,
					column: 5
				},
				end: {
					line: 254,
					column: 25
				}
			},
			'94': {
				start: {
					line: 256,
					column: 5
				},
				end: {
					line: 259,
					column: 24
				}
			},
			'95': {
				start: {
					line: 260,
					column: 5
				},
				end: {
					line: 260,
					column: 21
				}
			},
			'96': {
				start: {
					line: 264,
					column: 3
				},
				end: {
					line: 268,
					column: 4
				}
			},
			'97': {
				start: {
					line: 265,
					column: 4
				},
				end: {
					line: 265,
					column: 18
				}
			},
			'98': {
				start: {
					line: 266,
					column: 4
				},
				end: {
					line: 266,
					column: 28
				}
			},
			'99': {
				start: {
					line: 267,
					column: 4
				},
				end: {
					line: 267,
					column: 28
				}
			},
			'100': {
				start: {
					line: 270,
					column: 3
				},
				end: {
					line: 273,
					column: 5
				}
			},
			'101': {
				start: {
					line: 279,
					column: 2
				},
				end: {
					line: 279,
					column: 35
				}
			},
			'102': {
				start: {
					line: 280,
					column: 2
				},
				end: {
					line: 280,
					column: 26
				}
			},
			'103': {
				start: {
					line: 283,
					column: 2
				},
				end: {
					line: 283,
					column: 15
				}
			},
			'104': {
				start: {
					line: 285,
					column: 2
				},
				end: {
					line: 285,
					column: 27
				}
			},
			'105': {
				start: {
					line: 287,
					column: 2
				},
				end: {
					line: 287,
					column: 12
				}
			}
		},
		fnMap: {
			'0': {
				name: '(anonymous_0)',
				decl: {
					start: {
						line: 32,
						column: 1
					},
					end: {
						line: 32,
						column: 2
					}
				},
				loc: {
					start: {
						line: 32,
						column: 23
					},
					end: {
						line: 36,
						column: 2
					}
				},
				line: 32
			},
			'1': {
				name: '(anonymous_1)',
				decl: {
					start: {
						line: 38,
						column: 1
					},
					end: {
						line: 38,
						column: 2
					}
				},
				loc: {
					start: {
						line: 38,
						column: 18
					},
					end: {
						line: 84,
						column: 2
					}
				},
				line: 38
			},
			'2': {
				name: '(anonymous_2)',
				decl: {
					start: {
						line: 86,
						column: 1
					},
					end: {
						line: 86,
						column: 2
					}
				},
				loc: {
					start: {
						line: 86,
						column: 27
					},
					end: {
						line: 128,
						column: 2
					}
				},
				line: 86
			},
			'3': {
				name: '(anonymous_3)',
				decl: {
					start: {
						line: 130,
						column: 1
					},
					end: {
						line: 130,
						column: 2
					}
				},
				loc: {
					start: {
						line: 130,
						column: 18
					},
					end: {
						line: 151,
						column: 2
					}
				},
				line: 130
			},
			'4': {
				name: '(anonymous_4)',
				decl: {
					start: {
						line: 153,
						column: 1
					},
					end: {
						line: 153,
						column: 2
					}
				},
				loc: {
					start: {
						line: 153,
						column: 19
					},
					end: {
						line: 166,
						column: 2
					}
				},
				line: 153
			},
			'5': {
				name: '(anonymous_5)',
				decl: {
					start: {
						line: 168,
						column: 1
					},
					end: {
						line: 168,
						column: 2
					}
				},
				loc: {
					start: {
						line: 168,
						column: 21
					},
					end: {
						line: 275,
						column: 2
					}
				},
				line: 168
			},
			'6': {
				name: '(anonymous_6)',
				decl: {
					start: {
						line: 199,
						column: 11
					},
					end: {
						line: 199,
						column: 12
					}
				},
				loc: {
					start: {
						line: 199,
						column: 27
					},
					end: {
						line: 228,
						column: 5
					}
				},
				line: 199
			},
			'7': {
				name: '(anonymous_7)',
				decl: {
					start: {
						line: 200,
						column: 12
					},
					end: {
						line: 200,
						column: 13
					}
				},
				loc: {
					start: {
						line: 200,
						column: 24
					},
					end: {
						line: 227,
						column: 6
					}
				},
				line: 200
			},
			'8': {
				name: '(anonymous_8)',
				decl: {
					start: {
						line: 277,
						column: 1
					},
					end: {
						line: 277,
						column: 2
					}
				},
				loc: {
					start: {
						line: 277,
						column: 17
					},
					end: {
						line: 288,
						column: 2
					}
				},
				line: 277
			}
		},
		branchMap: {
			'0': {
				loc: {
					start: {
						line: 54,
						column: 3
					},
					end: {
						line: 80,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 54,
						column: 3
					},
					end: {
						line: 80,
						column: 4
					}
				}, {
					start: {
						line: 54,
						column: 3
					},
					end: {
						line: 80,
						column: 4
					}
				}],
				line: 54
			},
			'1': {
				loc: {
					start: {
						line: 54,
						column: 7
					},
					end: {
						line: 54,
						column: 25
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 54,
						column: 7
					},
					end: {
						line: 54,
						column: 14
					}
				}, {
					start: {
						line: 54,
						column: 18
					},
					end: {
						line: 54,
						column: 25
					}
				}],
				line: 54
			},
			'2': {
				loc: {
					start: {
						line: 55,
						column: 4
					},
					end: {
						line: 75,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 55,
						column: 4
					},
					end: {
						line: 75,
						column: 5
					}
				}, {
					start: {
						line: 55,
						column: 4
					},
					end: {
						line: 75,
						column: 5
					}
				}],
				line: 55
			},
			'3': {
				loc: {
					start: {
						line: 55,
						column: 8
					},
					end: {
						line: 55,
						column: 26
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 55,
						column: 8
					},
					end: {
						line: 55,
						column: 15
					}
				}, {
					start: {
						line: 55,
						column: 19
					},
					end: {
						line: 55,
						column: 26
					}
				}],
				line: 55
			},
			'4': {
				loc: {
					start: {
						line: 57,
						column: 6
					},
					end: {
						line: 57,
						column: 47
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 57,
						column: 16
					},
					end: {
						line: 57,
						column: 30
					}
				}, {
					start: {
						line: 57,
						column: 33
					},
					end: {
						line: 57,
						column: 47
					}
				}],
				line: 57
			},
			'5': {
				loc: {
					start: {
						line: 59,
						column: 11
					},
					end: {
						line: 75,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 59,
						column: 11
					},
					end: {
						line: 75,
						column: 5
					}
				}, {
					start: {
						line: 59,
						column: 11
					},
					end: {
						line: 75,
						column: 5
					}
				}],
				line: 59
			},
			'6': {
				loc: {
					start: {
						line: 59,
						column: 15
					},
					end: {
						line: 59,
						column: 33
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 59,
						column: 15
					},
					end: {
						line: 59,
						column: 22
					}
				}, {
					start: {
						line: 59,
						column: 26
					},
					end: {
						line: 59,
						column: 33
					}
				}],
				line: 59
			},
			'7': {
				loc: {
					start: {
						line: 61,
						column: 6
					},
					end: {
						line: 61,
						column: 47
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 61,
						column: 16
					},
					end: {
						line: 61,
						column: 30
					}
				}, {
					start: {
						line: 61,
						column: 33
					},
					end: {
						line: 61,
						column: 47
					}
				}],
				line: 61
			},
			'8': {
				loc: {
					start: {
						line: 63,
						column: 11
					},
					end: {
						line: 75,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 63,
						column: 11
					},
					end: {
						line: 75,
						column: 5
					}
				}, {
					start: {
						line: 63,
						column: 11
					},
					end: {
						line: 75,
						column: 5
					}
				}],
				line: 63
			},
			'9': {
				loc: {
					start: {
						line: 63,
						column: 15
					},
					end: {
						line: 63,
						column: 33
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 63,
						column: 15
					},
					end: {
						line: 63,
						column: 22
					}
				}, {
					start: {
						line: 63,
						column: 26
					},
					end: {
						line: 63,
						column: 33
					}
				}],
				line: 63
			},
			'10': {
				loc: {
					start: {
						line: 65,
						column: 6
					},
					end: {
						line: 65,
						column: 47
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 65,
						column: 16
					},
					end: {
						line: 65,
						column: 30
					}
				}, {
					start: {
						line: 65,
						column: 33
					},
					end: {
						line: 65,
						column: 47
					}
				}],
				line: 65
			},
			'11': {
				loc: {
					start: {
						line: 67,
						column: 11
					},
					end: {
						line: 75,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 67,
						column: 11
					},
					end: {
						line: 75,
						column: 5
					}
				}, {
					start: {
						line: 67,
						column: 11
					},
					end: {
						line: 75,
						column: 5
					}
				}],
				line: 67
			},
			'12': {
				loc: {
					start: {
						line: 69,
						column: 6
					},
					end: {
						line: 69,
						column: 47
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 69,
						column: 16
					},
					end: {
						line: 69,
						column: 30
					}
				}, {
					start: {
						line: 69,
						column: 33
					},
					end: {
						line: 69,
						column: 47
					}
				}],
				line: 69
			},
			'13': {
				loc: {
					start: {
						line: 73,
						column: 6
					},
					end: {
						line: 73,
						column: 47
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 73,
						column: 16
					},
					end: {
						line: 73,
						column: 30
					}
				}, {
					start: {
						line: 73,
						column: 33
					},
					end: {
						line: 73,
						column: 47
					}
				}],
				line: 73
			},
			'14': {
				loc: {
					start: {
						line: 76,
						column: 10
					},
					end: {
						line: 80,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 76,
						column: 10
					},
					end: {
						line: 80,
						column: 4
					}
				}, {
					start: {
						line: 76,
						column: 10
					},
					end: {
						line: 80,
						column: 4
					}
				}],
				line: 76
			},
			'15': {
				loc: {
					start: {
						line: 76,
						column: 14
					},
					end: {
						line: 76,
						column: 32
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 76,
						column: 14
					},
					end: {
						line: 76,
						column: 21
					}
				}, {
					start: {
						line: 76,
						column: 25
					},
					end: {
						line: 76,
						column: 32
					}
				}],
				line: 76
			},
			'16': {
				loc: {
					start: {
						line: 78,
						column: 5
					},
					end: {
						line: 78,
						column: 46
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 78,
						column: 15
					},
					end: {
						line: 78,
						column: 29
					}
				}, {
					start: {
						line: 78,
						column: 32
					},
					end: {
						line: 78,
						column: 46
					}
				}],
				line: 78
			},
			'17': {
				loc: {
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 125,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 125,
						column: 3
					}
				}, {
					start: {
						line: 87,
						column: 2
					},
					end: {
						line: 125,
						column: 3
					}
				}],
				line: 87
			},
			'18': {
				loc: {
					start: {
						line: 87,
						column: 6
					},
					end: {
						line: 87,
						column: 13
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 87,
						column: 6
					},
					end: {
						line: 87,
						column: 8
					}
				}, {
					start: {
						line: 87,
						column: 12
					},
					end: {
						line: 87,
						column: 13
					}
				}],
				line: 87
			},
			'19': {
				loc: {
					start: {
						line: 89,
						column: 3
					},
					end: {
						line: 93,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 89,
						column: 3
					},
					end: {
						line: 93,
						column: 4
					}
				}, {
					start: {
						line: 89,
						column: 3
					},
					end: {
						line: 93,
						column: 4
					}
				}],
				line: 89
			},
			'20': {
				loc: {
					start: {
						line: 89,
						column: 7
					},
					end: {
						line: 91,
						column: 29
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 89,
						column: 7
					},
					end: {
						line: 89,
						column: 22
					}
				}, {
					start: {
						line: 89,
						column: 27
					},
					end: {
						line: 89,
						column: 55
					}
				}, {
					start: {
						line: 90,
						column: 5
					},
					end: {
						line: 90,
						column: 33
					}
				}, {
					start: {
						line: 91,
						column: 5
					},
					end: {
						line: 91,
						column: 28
					}
				}],
				line: 89
			},
			'21': {
				loc: {
					start: {
						line: 95,
						column: 3
					},
					end: {
						line: 99,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 95,
						column: 3
					},
					end: {
						line: 99,
						column: 4
					}
				}, {
					start: {
						line: 95,
						column: 3
					},
					end: {
						line: 99,
						column: 4
					}
				}],
				line: 95
			},
			'22': {
				loc: {
					start: {
						line: 95,
						column: 7
					},
					end: {
						line: 97,
						column: 30
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 95,
						column: 7
					},
					end: {
						line: 95,
						column: 22
					}
				}, {
					start: {
						line: 95,
						column: 27
					},
					end: {
						line: 95,
						column: 56
					}
				}, {
					start: {
						line: 96,
						column: 5
					},
					end: {
						line: 96,
						column: 34
					}
				}, {
					start: {
						line: 97,
						column: 5
					},
					end: {
						line: 97,
						column: 29
					}
				}],
				line: 95
			},
			'23': {
				loc: {
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 105,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 105,
						column: 4
					}
				}, {
					start: {
						line: 101,
						column: 3
					},
					end: {
						line: 105,
						column: 4
					}
				}],
				line: 101
			},
			'24': {
				loc: {
					start: {
						line: 101,
						column: 7
					},
					end: {
						line: 103,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 101,
						column: 7
					},
					end: {
						line: 101,
						column: 20
					}
				}, {
					start: {
						line: 101,
						column: 25
					},
					end: {
						line: 101,
						column: 49
					}
				}, {
					start: {
						line: 102,
						column: 5
					},
					end: {
						line: 102,
						column: 33
					}
				}, {
					start: {
						line: 103,
						column: 5
					},
					end: {
						line: 103,
						column: 34
					}
				}],
				line: 101
			},
			'25': {
				loc: {
					start: {
						line: 107,
						column: 3
					},
					end: {
						line: 111,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 107,
						column: 3
					},
					end: {
						line: 111,
						column: 4
					}
				}, {
					start: {
						line: 107,
						column: 3
					},
					end: {
						line: 111,
						column: 4
					}
				}],
				line: 107
			},
			'26': {
				loc: {
					start: {
						line: 107,
						column: 7
					},
					end: {
						line: 109,
						column: 35
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 107,
						column: 7
					},
					end: {
						line: 107,
						column: 20
					}
				}, {
					start: {
						line: 107,
						column: 25
					},
					end: {
						line: 107,
						column: 49
					}
				}, {
					start: {
						line: 108,
						column: 5
					},
					end: {
						line: 108,
						column: 33
					}
				}, {
					start: {
						line: 109,
						column: 5
					},
					end: {
						line: 109,
						column: 34
					}
				}],
				line: 107
			},
			'27': {
				loc: {
					start: {
						line: 118,
						column: 3
					},
					end: {
						line: 124,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 118,
						column: 3
					},
					end: {
						line: 124,
						column: 4
					}
				}, {
					start: {
						line: 118,
						column: 3
					},
					end: {
						line: 124,
						column: 4
					}
				}],
				line: 118
			},
			'28': {
				loc: {
					start: {
						line: 118,
						column: 7
					},
					end: {
						line: 118,
						column: 50
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 118,
						column: 7
					},
					end: {
						line: 118,
						column: 20
					}
				}, {
					start: {
						line: 118,
						column: 24
					},
					end: {
						line: 118,
						column: 35
					}
				}, {
					start: {
						line: 118,
						column: 39
					},
					end: {
						line: 118,
						column: 50
					}
				}],
				line: 118
			},
			'29': {
				loc: {
					start: {
						line: 121,
						column: 4
					},
					end: {
						line: 123,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 121,
						column: 4
					},
					end: {
						line: 123,
						column: 5
					}
				}, {
					start: {
						line: 121,
						column: 4
					},
					end: {
						line: 123,
						column: 5
					}
				}],
				line: 121
			},
			'30': {
				loc: {
					start: {
						line: 121,
						column: 8
					},
					end: {
						line: 121,
						column: 57
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 121,
						column: 8
					},
					end: {
						line: 121,
						column: 20
					}
				}, {
					start: {
						line: 121,
						column: 24
					},
					end: {
						line: 121,
						column: 47
					}
				}, {
					start: {
						line: 121,
						column: 51
					},
					end: {
						line: 121,
						column: 57
					}
				}],
				line: 121
			},
			'31': {
				loc: {
					start: {
						line: 132,
						column: 2
					},
					end: {
						line: 135,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 132,
						column: 2
					},
					end: {
						line: 135,
						column: 3
					}
				}, {
					start: {
						line: 132,
						column: 2
					},
					end: {
						line: 135,
						column: 3
					}
				}],
				line: 132
			},
			'32': {
				loc: {
					start: {
						line: 132,
						column: 6
					},
					end: {
						line: 132,
						column: 51
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 132,
						column: 6
					},
					end: {
						line: 132,
						column: 27
					}
				}, {
					start: {
						line: 132,
						column: 31
					},
					end: {
						line: 132,
						column: 45
					}
				}, {
					start: {
						line: 132,
						column: 49
					},
					end: {
						line: 132,
						column: 51
					}
				}],
				line: 132
			},
			'33': {
				loc: {
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 148,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 148,
						column: 3
					}
				}, {
					start: {
						line: 142,
						column: 2
					},
					end: {
						line: 148,
						column: 3
					}
				}],
				line: 142
			},
			'34': {
				loc: {
					start: {
						line: 142,
						column: 6
					},
					end: {
						line: 142,
						column: 37
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 142,
						column: 6
					},
					end: {
						line: 142,
						column: 19
					}
				}, {
					start: {
						line: 142,
						column: 23
					},
					end: {
						line: 142,
						column: 28
					}
				}, {
					start: {
						line: 142,
						column: 32
					},
					end: {
						line: 142,
						column: 37
					}
				}],
				line: 142
			},
			'35': {
				loc: {
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 147,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 147,
						column: 4
					}
				}, {
					start: {
						line: 145,
						column: 3
					},
					end: {
						line: 147,
						column: 4
					}
				}],
				line: 145
			},
			'36': {
				loc: {
					start: {
						line: 145,
						column: 7
					},
					end: {
						line: 145,
						column: 46
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 145,
						column: 7
					},
					end: {
						line: 145,
						column: 19
					}
				}, {
					start: {
						line: 145,
						column: 23
					},
					end: {
						line: 145,
						column: 46
					}
				}],
				line: 145
			},
			'37': {
				loc: {
					start: {
						line: 159,
						column: 3
					},
					end: {
						line: 162,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 159,
						column: 3
					},
					end: {
						line: 162,
						column: 4
					}
				}, {
					start: {
						line: 159,
						column: 3
					},
					end: {
						line: 162,
						column: 4
					}
				}],
				line: 159
			},
			'38': {
				loc: {
					start: {
						line: 159,
						column: 7
					},
					end: {
						line: 160,
						column: 40
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 159,
						column: 7
					},
					end: {
						line: 159,
						column: 28
					}
				}, {
					start: {
						line: 160,
						column: 5
					},
					end: {
						line: 160,
						column: 40
					}
				}],
				line: 159
			},
			'39': {
				loc: {
					start: {
						line: 169,
						column: 2
					},
					end: {
						line: 172,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 169,
						column: 2
					},
					end: {
						line: 172,
						column: 3
					}
				}, {
					start: {
						line: 169,
						column: 2
					},
					end: {
						line: 172,
						column: 3
					}
				}],
				line: 169
			},
			'40': {
				loc: {
					start: {
						line: 169,
						column: 6
					},
					end: {
						line: 170,
						column: 20
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 169,
						column: 6
					},
					end: {
						line: 169,
						column: 29
					}
				}, {
					start: {
						line: 170,
						column: 4
					},
					end: {
						line: 170,
						column: 20
					}
				}],
				line: 169
			},
			'41': {
				loc: {
					start: {
						line: 174,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 174,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				}, {
					start: {
						line: 174,
						column: 2
					},
					end: {
						line: 177,
						column: 3
					}
				}],
				line: 174
			},
			'42': {
				loc: {
					start: {
						line: 174,
						column: 6
					},
					end: {
						line: 175,
						column: 21
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 174,
						column: 6
					},
					end: {
						line: 174,
						column: 30
					}
				}, {
					start: {
						line: 175,
						column: 4
					},
					end: {
						line: 175,
						column: 21
					}
				}],
				line: 174
			},
			'43': {
				loc: {
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 184,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 184,
						column: 3
					}
				}, {
					start: {
						line: 181,
						column: 2
					},
					end: {
						line: 184,
						column: 3
					}
				}],
				line: 181
			},
			'44': {
				loc: {
					start: {
						line: 186,
						column: 2
					},
					end: {
						line: 274,
						column: 3
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 186,
						column: 2
					},
					end: {
						line: 274,
						column: 3
					}
				}, {
					start: {
						line: 186,
						column: 2
					},
					end: {
						line: 274,
						column: 3
					}
				}],
				line: 186
			},
			'45': {
				loc: {
					start: {
						line: 186,
						column: 6
					},
					end: {
						line: 187,
						column: 34
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 186,
						column: 6
					},
					end: {
						line: 186,
						column: 9
					}
				}, {
					start: {
						line: 186,
						column: 13
					},
					end: {
						line: 186,
						column: 21
					}
				}, {
					start: {
						line: 186,
						column: 25
					},
					end: {
						line: 186,
						column: 33
					}
				}, {
					start: {
						line: 187,
						column: 4
					},
					end: {
						line: 187,
						column: 8
					}
				}, {
					start: {
						line: 187,
						column: 12
					},
					end: {
						line: 187,
						column: 21
					}
				}, {
					start: {
						line: 187,
						column: 25
					},
					end: {
						line: 187,
						column: 34
					}
				}],
				line: 186
			},
			'46': {
				loc: {
					start: {
						line: 204,
						column: 6
					},
					end: {
						line: 214,
						column: 7
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 204,
						column: 6
					},
					end: {
						line: 214,
						column: 7
					}
				}, {
					start: {
						line: 204,
						column: 6
					},
					end: {
						line: 214,
						column: 7
					}
				}],
				line: 204
			},
			'47': {
				loc: {
					start: {
						line: 216,
						column: 6
					},
					end: {
						line: 226,
						column: 7
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 216,
						column: 6
					},
					end: {
						line: 226,
						column: 7
					}
				}, {
					start: {
						line: 216,
						column: 6
					},
					end: {
						line: 226,
						column: 7
					}
				}],
				line: 216
			},
			'48': {
				loc: {
					start: {
						line: 218,
						column: 8
					},
					end: {
						line: 218,
						column: 48
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 218,
						column: 39
					},
					end: {
						line: 218,
						column: 42
					}
				}, {
					start: {
						line: 218,
						column: 45
					},
					end: {
						line: 218,
						column: 48
					}
				}],
				line: 218
			},
			'49': {
				loc: {
					start: {
						line: 222,
						column: 8
					},
					end: {
						line: 222,
						column: 48
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 222,
						column: 39
					},
					end: {
						line: 222,
						column: 42
					}
				}, {
					start: {
						line: 222,
						column: 45
					},
					end: {
						line: 222,
						column: 48
					}
				}],
				line: 222
			},
			'50': {
				loc: {
					start: {
						line: 231,
						column: 17
					},
					end: {
						line: 233,
						column: 66
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 231,
						column: 17
					},
					end: {
						line: 231,
						column: 42
					}
				}, {
					start: {
						line: 232,
						column: 4
					},
					end: {
						line: 232,
						column: 21
					}
				}, {
					start: {
						line: 233,
						column: 5
					},
					end: {
						line: 233,
						column: 33
					}
				}, {
					start: {
						line: 233,
						column: 37
					},
					end: {
						line: 233,
						column: 65
					}
				}],
				line: 231
			},
			'51': {
				loc: {
					start: {
						line: 234,
						column: 20
					},
					end: {
						line: 236,
						column: 49
					}
				},
				type: 'binary-expr',
				locations: [{
					start: {
						line: 234,
						column: 20
					},
					end: {
						line: 234,
						column: 45
					}
				}, {
					start: {
						line: 235,
						column: 4
					},
					end: {
						line: 235,
						column: 31
					}
				}, {
					start: {
						line: 236,
						column: 4
					},
					end: {
						line: 236,
						column: 49
					}
				}],
				line: 234
			},
			'52': {
				loc: {
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 244,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 244,
						column: 4
					}
				}, {
					start: {
						line: 240,
						column: 3
					},
					end: {
						line: 244,
						column: 4
					}
				}],
				line: 240
			},
			'53': {
				loc: {
					start: {
						line: 247,
						column: 3
					},
					end: {
						line: 262,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 247,
						column: 3
					},
					end: {
						line: 262,
						column: 4
					}
				}, {
					start: {
						line: 247,
						column: 3
					},
					end: {
						line: 262,
						column: 4
					}
				}],
				line: 247
			},
			'54': {
				loc: {
					start: {
						line: 249,
						column: 5
					},
					end: {
						line: 249,
						column: 45
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 249,
						column: 36
					},
					end: {
						line: 249,
						column: 39
					}
				}, {
					start: {
						line: 249,
						column: 42
					},
					end: {
						line: 249,
						column: 45
					}
				}],
				line: 249
			},
			'55': {
				loc: {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 261,
						column: 5
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 261,
						column: 5
					}
				}, {
					start: {
						line: 253,
						column: 4
					},
					end: {
						line: 261,
						column: 5
					}
				}],
				line: 253
			},
			'56': {
				loc: {
					start: {
						line: 257,
						column: 6
					},
					end: {
						line: 257,
						column: 46
					}
				},
				type: 'cond-expr',
				locations: [{
					start: {
						line: 257,
						column: 37
					},
					end: {
						line: 257,
						column: 40
					}
				}, {
					start: {
						line: 257,
						column: 43
					},
					end: {
						line: 257,
						column: 46
					}
				}],
				line: 257
			},
			'57': {
				loc: {
					start: {
						line: 264,
						column: 3
					},
					end: {
						line: 268,
						column: 4
					}
				},
				type: 'if',
				locations: [{
					start: {
						line: 264,
						column: 3
					},
					end: {
						line: 268,
						column: 4
					}
				}, {
					start: {
						line: 264,
						column: 3
					},
					end: {
						line: 268,
						column: 4
					}
				}],
				line: 264
			}
		},
		s: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0,
			'9': 0,
			'10': 0,
			'11': 0,
			'12': 0,
			'13': 0,
			'14': 0,
			'15': 0,
			'16': 0,
			'17': 0,
			'18': 0,
			'19': 0,
			'20': 0,
			'21': 0,
			'22': 0,
			'23': 0,
			'24': 0,
			'25': 0,
			'26': 0,
			'27': 0,
			'28': 0,
			'29': 0,
			'30': 0,
			'31': 0,
			'32': 0,
			'33': 0,
			'34': 0,
			'35': 0,
			'36': 0,
			'37': 0,
			'38': 0,
			'39': 0,
			'40': 0,
			'41': 0,
			'42': 0,
			'43': 0,
			'44': 0,
			'45': 0,
			'46': 0,
			'47': 0,
			'48': 0,
			'49': 0,
			'50': 0,
			'51': 0,
			'52': 0,
			'53': 0,
			'54': 0,
			'55': 0,
			'56': 0,
			'57': 0,
			'58': 0,
			'59': 0,
			'60': 0,
			'61': 0,
			'62': 0,
			'63': 0,
			'64': 0,
			'65': 0,
			'66': 0,
			'67': 0,
			'68': 0,
			'69': 0,
			'70': 0,
			'71': 0,
			'72': 0,
			'73': 0,
			'74': 0,
			'75': 0,
			'76': 0,
			'77': 0,
			'78': 0,
			'79': 0,
			'80': 0,
			'81': 0,
			'82': 0,
			'83': 0,
			'84': 0,
			'85': 0,
			'86': 0,
			'87': 0,
			'88': 0,
			'89': 0,
			'90': 0,
			'91': 0,
			'92': 0,
			'93': 0,
			'94': 0,
			'95': 0,
			'96': 0,
			'97': 0,
			'98': 0,
			'99': 0,
			'100': 0,
			'101': 0,
			'102': 0,
			'103': 0,
			'104': 0,
			'105': 0
		},
		f: {
			'0': 0,
			'1': 0,
			'2': 0,
			'3': 0,
			'4': 0,
			'5': 0,
			'6': 0,
			'7': 0,
			'8': 0
		},
		b: {
			'0': [0, 0],
			'1': [0, 0],
			'2': [0, 0],
			'3': [0, 0],
			'4': [0, 0],
			'5': [0, 0],
			'6': [0, 0],
			'7': [0, 0],
			'8': [0, 0],
			'9': [0, 0],
			'10': [0, 0],
			'11': [0, 0],
			'12': [0, 0],
			'13': [0, 0],
			'14': [0, 0],
			'15': [0, 0],
			'16': [0, 0],
			'17': [0, 0],
			'18': [0, 0],
			'19': [0, 0],
			'20': [0, 0, 0, 0],
			'21': [0, 0],
			'22': [0, 0, 0, 0],
			'23': [0, 0],
			'24': [0, 0, 0, 0],
			'25': [0, 0],
			'26': [0, 0, 0, 0],
			'27': [0, 0],
			'28': [0, 0, 0],
			'29': [0, 0],
			'30': [0, 0, 0],
			'31': [0, 0],
			'32': [0, 0, 0],
			'33': [0, 0],
			'34': [0, 0, 0],
			'35': [0, 0],
			'36': [0, 0],
			'37': [0, 0],
			'38': [0, 0],
			'39': [0, 0],
			'40': [0, 0],
			'41': [0, 0],
			'42': [0, 0],
			'43': [0, 0],
			'44': [0, 0],
			'45': [0, 0, 0, 0, 0, 0],
			'46': [0, 0],
			'47': [0, 0],
			'48': [0, 0],
			'49': [0, 0],
			'50': [0, 0, 0, 0],
			'51': [0, 0, 0],
			'52': [0, 0],
			'53': [0, 0],
			'54': [0, 0],
			'55': [0, 0],
			'56': [0, 0],
			'57': [0, 0]
		},
		_coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
	},
	    coverage = global[gcv] || (global[gcv] = {});

	if (coverage[path] && coverage[path].hash === hash) {
		return coverage[path];
	}

	coverageData.hash = hash;
	return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Board = exports.NeighborType = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _events = require('events');

var _piece = require('./piece');

var _square = require('./square');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               	The Board is the representation of the current position of the pieces on
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               	the squares it contains.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */

// types
var NeighborType = exports.NeighborType = (cov_1m8d64adko.s[0]++, {
	Above: { offset: 8 },
	AboveLeft: { offset: 7 },
	AboveRight: { offset: 9 },
	Below: { offset: -8 },
	BelowLeft: { offset: -9 },
	BelowRight: { offset: -7 },
	KnightAboveLeft: { offset: 15 },
	KnightAboveRight: { offset: 17 },
	KnightBelowLeft: { offset: -17 },
	KnightBelowRight: { offset: -15 },
	KnightLeftAbove: { offset: 6 },
	KnightLeftBelow: { offset: -10 },
	KnightRightAbove: { offset: 10 },
	KnightRightBelow: { offset: -6 },
	Left: { offset: -1 },
	Right: { offset: 1 }
});

// ctor

var Board = exports.Board = function (_ref) {
	_inherits(Board, _ref);

	function Board(squares) {
		_classCallCheck(this, Board);

		cov_1m8d64adko.f[0]++;
		cov_1m8d64adko.s[1]++;

		var _this = _possibleConstructorReturn(this, (Board.__proto__ || Object.getPrototypeOf(Board)).call(this));

		cov_1m8d64adko.s[2]++;


		_this.squares = squares;
		return _this;
	}

	_createClass(Board, [{
		key: 'getNeighborSquare',
		value: function getNeighborSquare(sq, n) {
			cov_1m8d64adko.f[2]++;
			cov_1m8d64adko.s[26]++;

			if ((cov_1m8d64adko.b[18][0]++, sq) && (cov_1m8d64adko.b[18][1]++, n)) {
				cov_1m8d64adko.b[17][0]++;
				cov_1m8d64adko.s[27]++;

				// validate boundaries of board
				if ((cov_1m8d64adko.b[20][0]++, sq.file === 'a') && ((cov_1m8d64adko.b[20][1]++, n === NeighborType.AboveLeft) || (cov_1m8d64adko.b[20][2]++, n === NeighborType.BelowLeft) || (cov_1m8d64adko.b[20][3]++, n === NeighborType.Left))) {
					cov_1m8d64adko.b[19][0]++;
					cov_1m8d64adko.s[28]++;

					return null;
				} else {
					cov_1m8d64adko.b[19][1]++;
				}

				cov_1m8d64adko.s[29]++;
				if ((cov_1m8d64adko.b[22][0]++, sq.file === 'h') && ((cov_1m8d64adko.b[22][1]++, n === NeighborType.AboveRight) || (cov_1m8d64adko.b[22][2]++, n === NeighborType.BelowRight) || (cov_1m8d64adko.b[22][3]++, n === NeighborType.Right))) {
					cov_1m8d64adko.b[21][0]++;
					cov_1m8d64adko.s[30]++;

					return null;
				} else {
					cov_1m8d64adko.b[21][1]++;
				}

				cov_1m8d64adko.s[31]++;
				if ((cov_1m8d64adko.b[24][0]++, sq.rank === 1) && ((cov_1m8d64adko.b[24][1]++, n === NeighborType.Below) || (cov_1m8d64adko.b[24][2]++, n === NeighborType.BelowLeft) || (cov_1m8d64adko.b[24][3]++, n === NeighborType.BelowRight))) {
					cov_1m8d64adko.b[23][0]++;
					cov_1m8d64adko.s[32]++;

					return null;
				} else {
					cov_1m8d64adko.b[23][1]++;
				}

				cov_1m8d64adko.s[33]++;
				if ((cov_1m8d64adko.b[26][0]++, sq.rank === 8) && ((cov_1m8d64adko.b[26][1]++, n === NeighborType.Above) || (cov_1m8d64adko.b[26][2]++, n === NeighborType.AboveLeft) || (cov_1m8d64adko.b[26][3]++, n === NeighborType.AboveRight))) {
					cov_1m8d64adko.b[25][0]++;
					cov_1m8d64adko.s[34]++;

					return null;
				} else {
					cov_1m8d64adko.b[25][1]++;
				}

				// validate file
				var fIndex = (cov_1m8d64adko.s[35]++, 'abcdefgh'.indexOf(sq.file)),
				    i = (cov_1m8d64adko.s[36]++, 0);

				cov_1m8d64adko.s[37]++;
				if ((cov_1m8d64adko.b[28][0]++, fIndex !== -1) && (cov_1m8d64adko.b[28][1]++, sq.rank > 0) && (cov_1m8d64adko.b[28][2]++, sq.rank < 9)) {
					cov_1m8d64adko.b[27][0]++;
					cov_1m8d64adko.s[38]++;

					// find the index
					i = 8 * (sq.rank - 1) + fIndex + n.offset;
					cov_1m8d64adko.s[39]++;
					if ((cov_1m8d64adko.b[30][0]++, this.squares) && (cov_1m8d64adko.b[30][1]++, this.squares.length > i) && (cov_1m8d64adko.b[30][2]++, i > -1)) {
						cov_1m8d64adko.b[29][0]++;
						cov_1m8d64adko.s[40]++;

						return this.squares[i];
					} else {
						cov_1m8d64adko.b[29][1]++;
					}
				} else {
					cov_1m8d64adko.b[27][1]++;
				}
			} else {
				cov_1m8d64adko.b[17][1]++;
			}

			cov_1m8d64adko.s[41]++;
			return null;
		}
	}, {
		key: 'getSquare',
		value: function getSquare(f, r) {
			cov_1m8d64adko.f[3]++;
			cov_1m8d64adko.s[42]++;

			// check for shorthand
			if ((cov_1m8d64adko.b[32][0]++, typeof f === 'string') && (cov_1m8d64adko.b[32][1]++, f.length === 2) && (cov_1m8d64adko.b[32][2]++, !r)) {
				cov_1m8d64adko.b[31][0]++;
				cov_1m8d64adko.s[43]++;

				r = parseInt(f.charAt(1), 10);
				cov_1m8d64adko.s[44]++;
				f = f.charAt(0);
			} else {
				cov_1m8d64adko.b[31][1]++;
			}

			// validate file
			var fIndex = (cov_1m8d64adko.s[45]++, 'abcdefgh'.indexOf(f)),
			    i = (cov_1m8d64adko.s[46]++, 0);

			cov_1m8d64adko.s[47]++;
			if ((cov_1m8d64adko.b[34][0]++, fIndex !== -1) && (cov_1m8d64adko.b[34][1]++, r > 0) && (cov_1m8d64adko.b[34][2]++, r < 9)) {
				cov_1m8d64adko.b[33][0]++;
				cov_1m8d64adko.s[48]++;

				// Find the index
				i = 8 * (r - 1) + fIndex;
				cov_1m8d64adko.s[49]++;
				if ((cov_1m8d64adko.b[36][0]++, this.squares) && (cov_1m8d64adko.b[36][1]++, this.squares.length > i)) {
					cov_1m8d64adko.b[35][0]++;
					cov_1m8d64adko.s[50]++;

					return this.squares[i];
				} else {
					cov_1m8d64adko.b[35][1]++;
				}
			} else {
				cov_1m8d64adko.b[33][1]++;
			}

			cov_1m8d64adko.s[51]++;
			return null;
		}
	}, {
		key: 'getSquares',
		value: function getSquares(side) {
			cov_1m8d64adko.f[4]++;

			var list = (cov_1m8d64adko.s[52]++, []),
			    i = (cov_1m8d64adko.s[53]++, 0);

			cov_1m8d64adko.s[54]++;
			for (i = 0; i < this.squares.length; i++) {
				cov_1m8d64adko.s[55]++;

				if ((cov_1m8d64adko.b[38][0]++, this.squares[i].piece) && (cov_1m8d64adko.b[38][1]++, this.squares[i].piece.side === side)) {
					cov_1m8d64adko.b[37][0]++;
					cov_1m8d64adko.s[56]++;

					list.push(this.squares[i]);
				} else {
					cov_1m8d64adko.b[37][1]++;
				}
			}

			cov_1m8d64adko.s[57]++;
			return list;
		}
	}, {
		key: 'move',
		value: function move(src, dest, n) {
			cov_1m8d64adko.f[5]++;
			cov_1m8d64adko.s[58]++;

			if ((cov_1m8d64adko.b[40][0]++, typeof src === 'string') && (cov_1m8d64adko.b[40][1]++, src.length === 2)) {
				cov_1m8d64adko.b[39][0]++;
				cov_1m8d64adko.s[59]++;

				src = this.getSquare(src);
			} else {
				cov_1m8d64adko.b[39][1]++;
			}

			cov_1m8d64adko.s[60]++;
			if ((cov_1m8d64adko.b[42][0]++, typeof dest === 'string') && (cov_1m8d64adko.b[42][1]++, dest.length === 2)) {
				cov_1m8d64adko.b[41][0]++;
				cov_1m8d64adko.s[61]++;

				dest = this.getSquare(dest);
			} else {
				cov_1m8d64adko.b[41][1]++;
			}

			var simulate = (cov_1m8d64adko.s[62]++, false);

			cov_1m8d64adko.s[63]++;
			if (typeof n === 'boolean') {
				cov_1m8d64adko.b[43][0]++;
				cov_1m8d64adko.s[64]++;

				simulate = n;
				cov_1m8d64adko.s[65]++;
				n = null;
			} else {
				cov_1m8d64adko.b[43][1]++;
			}

			cov_1m8d64adko.s[66]++;
			if ((cov_1m8d64adko.b[45][0]++, src) && (cov_1m8d64adko.b[45][1]++, src.file) && (cov_1m8d64adko.b[45][2]++, src.rank) && (cov_1m8d64adko.b[45][3]++, dest) && (cov_1m8d64adko.b[45][4]++, dest.file) && (cov_1m8d64adko.b[45][5]++, dest.rank)) {
				cov_1m8d64adko.b[44][0]++;
				cov_1m8d64adko.s[70]++;

				var move = (cov_1m8d64adko.s[67]++, {
					algebraic: n,
					capturedPiece: dest.piece,
					castle: false,
					enPassant: false,
					postSquare: dest,
					prevSquare: src
				}),
				    p = (cov_1m8d64adko.s[68]++, src.piece),
				    sq = (cov_1m8d64adko.s[69]++, null),
				    undo = function undo(b, m) {
					cov_1m8d64adko.f[6]++;
					cov_1m8d64adko.s[71]++;

					return function () {
						cov_1m8d64adko.f[7]++;
						cov_1m8d64adko.s[72]++;

						m.prevSquare.piece = m.postSquare.piece;
						cov_1m8d64adko.s[73]++;
						m.postSquare.piece = m.capturedPiece;

						cov_1m8d64adko.s[74]++;
						if (!m.enPassant) {
							cov_1m8d64adko.b[46][0]++;
							cov_1m8d64adko.s[75]++;

							m.postSquare.piece = m.capturedPiece;
						} else {
							cov_1m8d64adko.b[46][1]++;
							cov_1m8d64adko.s[76]++;

							b.getSquare(m.postSquare.file, m.prevSquare.rank).piece = m.capturedPiece;

							// there is no piece on the post square in the event of
							// an en-passant, clear anything that me be present as
							// a result of the move (fix for issue #8)
							cov_1m8d64adko.s[77]++;
							m.postSquare.piece = null;
						}

						cov_1m8d64adko.s[78]++;
						if (m.castle) {
							cov_1m8d64adko.b[47][0]++;
							cov_1m8d64adko.s[79]++;

							sq = b.getSquare(move.postSquare.file === 'g' ? (cov_1m8d64adko.b[48][0]++, 'f') : (cov_1m8d64adko.b[48][1]++, 'd'), move.postSquare.rank);
							cov_1m8d64adko.s[80]++;
							b.getSquare(move.postSquare.file === 'g' ? (cov_1m8d64adko.b[49][0]++, 'h') : (cov_1m8d64adko.b[49][1]++, 'a'), move.postSquare.rank).piece = sq.piece;
							cov_1m8d64adko.s[81]++;
							sq.piece = null;
						} else {
							cov_1m8d64adko.b[47][1]++;
						}
					};
				};

				cov_1m8d64adko.s[82]++;
				dest.piece = p;
				cov_1m8d64adko.s[83]++;
				move.castle = (cov_1m8d64adko.b[50][0]++, p.type === _piece.PieceType.King) && (cov_1m8d64adko.b[50][1]++, p.moveCount === 0) && ((cov_1m8d64adko.b[50][2]++, move.postSquare.file === 'g') || (cov_1m8d64adko.b[50][3]++, move.postSquare.file === 'c'));
				cov_1m8d64adko.s[84]++;
				move.enPassant = (cov_1m8d64adko.b[51][0]++, p.type === _piece.PieceType.Pawn) && (cov_1m8d64adko.b[51][1]++, move.capturedPiece === null) && (cov_1m8d64adko.b[51][2]++, move.postSquare.file !== move.prevSquare.file);
				cov_1m8d64adko.s[85]++;
				move.prevSquare.piece = null;

				// check for en-passant
				cov_1m8d64adko.s[86]++;
				if (move.enPassant) {
					cov_1m8d64adko.b[52][0]++;
					cov_1m8d64adko.s[87]++;

					sq = this.getSquare(move.postSquare.file, move.prevSquare.rank);
					cov_1m8d64adko.s[88]++;
					move.capturedPiece = sq.piece;
					cov_1m8d64adko.s[89]++;
					sq.piece = null;
				} else {
					cov_1m8d64adko.b[52][1]++;
				}

				// check for castle
				cov_1m8d64adko.s[90]++;
				if (move.castle) {
					cov_1m8d64adko.b[53][0]++;
					cov_1m8d64adko.s[91]++;

					sq = this.getSquare(move.postSquare.file === 'g' ? (cov_1m8d64adko.b[54][0]++, 'h') : (cov_1m8d64adko.b[54][1]++, 'a'), move.postSquare.rank);

					cov_1m8d64adko.s[92]++;
					if (sq.piece === null) {
						cov_1m8d64adko.b[55][0]++;
						cov_1m8d64adko.s[93]++;

						move.castle = false;
					} else {
						cov_1m8d64adko.b[55][1]++;
						cov_1m8d64adko.s[94]++;

						this.getSquare(move.postSquare.file === 'g' ? (cov_1m8d64adko.b[56][0]++, 'f') : (cov_1m8d64adko.b[56][1]++, 'd'), move.postSquare.rank).piece = sq.piece;
						cov_1m8d64adko.s[95]++;
						sq.piece = null;
					}
				} else {
					cov_1m8d64adko.b[53][1]++;
				}

				cov_1m8d64adko.s[96]++;
				if (!simulate) {
					cov_1m8d64adko.b[57][0]++;
					cov_1m8d64adko.s[97]++;

					p.moveCount++;
					cov_1m8d64adko.s[98]++;
					this.lastMovedPiece = p;
					cov_1m8d64adko.s[99]++;
					this.emit('move', move);
				} else {
					cov_1m8d64adko.b[57][1]++;
				}

				cov_1m8d64adko.s[100]++;
				return {
					move: move,
					undo: undo(this, move, simulate)
				};
			} else {
				cov_1m8d64adko.b[44][1]++;
			}
		}
	}, {
		key: 'promote',
		value: function promote(sq, p) {
			cov_1m8d64adko.f[8]++;
			cov_1m8d64adko.s[101]++;

			// update move count and last piece
			p.moveCount = sq.piece.moveCount;
			cov_1m8d64adko.s[102]++;
			this.lastMovedPiece = p;

			// set to square
			cov_1m8d64adko.s[103]++;
			sq.piece = p;

			cov_1m8d64adko.s[104]++;
			this.emit('promote', sq);

			cov_1m8d64adko.s[105]++;
			return sq;
		}
	}], [{
		key: 'create',
		value: function create() {
			cov_1m8d64adko.f[1]++;

			var b = (cov_1m8d64adko.s[3]++, new Board([])),
			    i = (cov_1m8d64adko.s[4]++, 0),
			    f = (cov_1m8d64adko.s[5]++, 0),
			    r = (cov_1m8d64adko.s[6]++, 0),
			    sq = (cov_1m8d64adko.s[7]++, null);

			/* eslint no-magic-numbers:0 */
			cov_1m8d64adko.s[8]++;
			for (i = 0; i < 64; i++) {
				cov_1m8d64adko.s[9]++;

				f = Math.floor(i % 8);
				cov_1m8d64adko.s[10]++;
				r = Math.floor(i / 8) + 1;
				cov_1m8d64adko.s[11]++;
				sq = _square.Square.create('abcdefgh'[f], r);

				cov_1m8d64adko.s[12]++;
				b.squares.push(sq);

				cov_1m8d64adko.s[13]++;
				if ((cov_1m8d64adko.b[1][0]++, r === 1) || (cov_1m8d64adko.b[1][1]++, r === 8)) {
					cov_1m8d64adko.b[0][0]++;
					cov_1m8d64adko.s[14]++;
					// Named pieces
					if ((cov_1m8d64adko.b[3][0]++, f === 0) || (cov_1m8d64adko.b[3][1]++, f === 7)) {
						cov_1m8d64adko.b[2][0]++;
						cov_1m8d64adko.s[15]++;
						// Rookage
						sq.piece = _piece.Piece.createRook(r === 1 ? (cov_1m8d64adko.b[4][0]++, _piece.SideType.White) : (cov_1m8d64adko.b[4][1]++, _piece.SideType.Black));
					} else {
							cov_1m8d64adko.b[2][1]++;
							cov_1m8d64adko.s[16]++;
							if ((cov_1m8d64adko.b[6][0]++, f === 1) || (cov_1m8d64adko.b[6][1]++, f === 6)) {
								cov_1m8d64adko.b[5][0]++;
								cov_1m8d64adko.s[17]++;
								// Knights
								sq.piece = _piece.Piece.createKnight(r === 1 ? (cov_1m8d64adko.b[7][0]++, _piece.SideType.White) : (cov_1m8d64adko.b[7][1]++, _piece.SideType.Black));
							} else {
									cov_1m8d64adko.b[5][1]++;
									cov_1m8d64adko.s[18]++;
									if ((cov_1m8d64adko.b[9][0]++, f === 2) || (cov_1m8d64adko.b[9][1]++, f === 5)) {
										cov_1m8d64adko.b[8][0]++;
										cov_1m8d64adko.s[19]++;
										// Bish's
										sq.piece = _piece.Piece.createBishop(r === 1 ? (cov_1m8d64adko.b[10][0]++, _piece.SideType.White) : (cov_1m8d64adko.b[10][1]++, _piece.SideType.Black));
									} else {
											cov_1m8d64adko.b[8][1]++;
											cov_1m8d64adko.s[20]++;
											if (f === 3) {
												cov_1m8d64adko.b[11][0]++;
												cov_1m8d64adko.s[21]++;

												sq.piece = _piece.Piece.createQueen(r === 1 ? (cov_1m8d64adko.b[12][0]++, _piece.SideType.White) : (cov_1m8d64adko.b[12][1]++, _piece.SideType.Black));
											} else {
												cov_1m8d64adko.b[11][1]++;
												cov_1m8d64adko.s[22]++;

												sq.piece = _piece.Piece.createKing(r === 1 ? (cov_1m8d64adko.b[13][0]++, _piece.SideType.White) : (cov_1m8d64adko.b[13][1]++, _piece.SideType.Black));
											}
										}
								}
						}
				} else {
						cov_1m8d64adko.b[0][1]++;
						cov_1m8d64adko.s[23]++;
						if ((cov_1m8d64adko.b[15][0]++, r === 2) || (cov_1m8d64adko.b[15][1]++, r === 7)) {
							cov_1m8d64adko.b[14][0]++;
							cov_1m8d64adko.s[24]++;
							// Pawns
							sq.piece = _piece.Piece.createPawn(r === 2 ? (cov_1m8d64adko.b[16][0]++, _piece.SideType.White) : (cov_1m8d64adko.b[16][1]++, _piece.SideType.Black));
						} else {
							cov_1m8d64adko.b[14][1]++;
						}
					}
			}

			cov_1m8d64adko.s[25]++;
			return b;
		}
	}]);

	return Board;
}((_events.EventEmitter));

// exports


exports.default = { Board: Board, NeighborType: NeighborType };
//# sourceMappingURL=board.js.map
